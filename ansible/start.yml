- name: "Set ASG size to 1"
  hosts: localhost
  gather_facts: false

  tasks:
  - ec2_asg:
      name: "minecraft"
      desired_capacity: 1
      region: "{{aws_region}}"

  # Since the above task changes the host set, refresh the inventory before
  # continuing
  - meta: refresh_inventory

# Fact gathering doesn't work if Python isn't available on the hosts, so we do
# this and the prior task first
- name: "Pre-fact-gathering Setup"
  hosts: all
  gather_facts: false

  tasks:
  - name: "Install Python on hosts"
    become: true
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

- name: "Installation & Launch"
  hosts: all

  tasks:
  - name: "Install prerequisites"
    become: true
    apt:
      name: "{{item}}"
      update_cache: yes
    with_items:
    - awscli
    - openjdk-8-jre-headless
    - python-pip
    - jq

  - name: "Create minecraft root directory"
    become: true
    file:
      path: /minecraft
      owner: ubuntu
      group: ubuntu
      state: directory

  # Not portable
  - name: "Mount NVMe device to minecraft directory"
    become: true
    become_user: root
    shell: |
        mkfs.ext4 /dev/nvme0n1
        mount -t ext4 /dev/nvme0n1 /minecraft
        chown ubuntu:ubuntu /minecraft

  - name: "Clone git repo into minecraft directory"
    git:
      repo: https://github.com/gerhalt/mining-camp.git
      dest: /minecraft/mining-camp

  - name: "Install Python requirements"
    become: true
    shell: |
      pip install -r '/minecraft/mining-camp/requirements.txt'

  - name: "Retrieve server tarball from S3"
    s3:
      bucket: "{{s3_bucket}}"
      object: "/{{server_name}}/{{server_file}}"
      dest: "/minecraft/{{server_file}}"
      mode: get

  - name: "Extract and install server"
    shell: |
      cd /minecraft
      tar -xzvf {{server_file}}

  - name: "Install prospector config"
    copy:
      src: "files/prospector.cfg"
      dest: "/minecraft/prospector.cfg"

  - name: "Install minecraft server config"
    copy:
      src: "files/server.properties"
      dest: "/minecraft/{{server_name}}/server.properties"

  - name: "Add backup script to crontab"
    cron:
      name: "minecraft backup monitor"
      minute: "*/5"
      job: "/minecraft/mining-camp/utilities/prospector.py backup"

  - name: "Start emergency shutdown monitoring script in the background"
    # In order to run a background process, we detach inputs and outputs and
    # use nohup. This runs shutdown.sh in its daemon mode.
    shell: |
      nohup /minecraft/mining-camp/utilities/shutdown.sh /minecraft </dev/null >/dev/null 2>&1 &

  - name: "Fetch most recent backup from S3 and install it"
    shell: |
      /minecraft/mining-camp/utilities/prospector.py fetch

  - name: "Start server bootstrap script"
    shell: |
      /minecraft/mining-camp/utilities/bootstrap.sh /minecraft/{{server_name}}

  - name: "Assign elastic ip"
    local_action: shell aws ec2 associate-address --region {{aws_region}} --instance-id {{ec2_id}} --allocation-id {{minecraft_eip_alloc_id}}
    ignore_errors: true
