- name: "Resizing ASG"
  hosts: localhost
  gather_facts: false

  tasks:
  - name: "Set auto-scaling group size to 1"
    ec2_asg:
      name: "minecraft"
      desired_capacity: 1
      region: "{{aws_region}}"

  # Since the above task changes the host set, refresh the inventory before
  # continuing
  - meta: refresh_inventory

# Fact gathering doesn't work if Python isn't available on the hosts, so we do
# this and the prior task first
- name: "Pre-fact-gathering setup"
  hosts: all
  gather_facts: false

  tasks:
  - name: "Wait for connection"
    wait_for_connection:
      delay: 30
      timeout: 300

  - name: "Install Python on hosts"
    become: true
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

- name: "Installation & Launch"
  hosts: all

  tasks:
  - name: "Derive instance category and size from name"
    set_fact:
      aws_instance_category: "{{ aws_instance_type.split('.')[0] }}"
      aws_instance_size: "{{ aws_instance_type.split('.')[1] }}"

  - name: "Install prerequisites"
    become: true
    apt:
      name: ["awscli", "openjdk-8-jre-headless", "python-pip", "jq"]
      update_cache: yes

  - name: "Create minecraft root directory"
    become: true
    file:
      path: "{{minecraft_dir}}"
      owner: ubuntu
      group: ubuntu
      state: directory

  # Device mounting tasks, depending on the instance category
  - name: "Mount NVMe device to minecraft directory"
    when: aws_instance_category == "i3"
    become: true
    become_user: root
    shell: |
        mkfs.ext4 /dev/nvme0n1
        mount -t ext4 /dev/nvme0n1 {{minecraft_dir}}
        chown ubuntu:ubuntu {{minecraft_dir}}

  - name: "Move mountpoint to minecraft directory"
    when: aws_instance_category == "m2"
    become: true
    shell: |
        umount /mnt
        mount /dev/xvdb {{minecraft_dir}}
        chown ubuntu:ubuntu {{minecraft_dir}}

  - name: "Clone git repo into minecraft directory"
    git:
      repo: https://github.com/tmoon8730/mining-camp.git
      dest: "{{minecraft_dir}}/mining-camp"

  - name: "Install Python requirements"
    become: true
    shell: |
      pip install -r '{{minecraft_dir}}/mining-camp/requirements.txt'

  - name: "Ensure server tarball doesn't exist"
    file:
      path: "{{minecraft_dir}}/{{server_file}}"
      state: absent

  - name: "Retrieve server tarball from S3"
    aws_s3:
      bucket: "{{s3_bucket}}"
      object: "/{{server_name}}/{{server_file}}"
      dest: "{{minecraft_dir}}/{{server_file}}"
      mode: get

  - name: "Extract and install server"
    shell: |
      cd {{minecraft_dir}}
      tar -xzvf {{server_file}}

  - name: "Render and install prospector config"
    template:
      src: "templates/prospector.cfg.j2"
      dest: "{{minecraft_dir}}/prospector.cfg"

  - name: "Install minecraft server config"
    copy:
      src: "files/server.properties"
      dest: "{{minecraft_dir}}/{{server_name}}/server.properties"

  - name: "Add backup script to crontab"
    cron:
      name: "minecraft backup monitor"
      minute: "*/5"
      job: "{{minecraft_dir}}/mining-camp/utilities/prospector.py backup"
  
  - name: "Add restart script to crontab"
    cron: 
      name: "minecraft restart"
      minute: "0 2 * * *"
      job: "{{minecraft_dir}}/mining-camp/utilities/minecraft-restart.sh"

  - name: "Start emergency shutdown monitoring script in the background"
    # In order to run a background process, we detach inputs and outputs and
    # use nohup. This runs shutdown.sh in its daemon mode.
    shell: |
      nohup {{minecraft_dir}}/mining-camp/utilities/shutdown.sh {{minecraft_dir}} </dev/null >/dev/null 2>&1 &

  - name: "Fetch most recent backup from S3 and install it"
    shell: |
        {{minecraft_dir}}/mining-camp/utilities/prospector.py fetch

  - name: "Start server bootstrap script"
    shell: |
      {{minecraft_dir}}/mining-camp/utilities/bootstrap.sh {{minecraft_dir}}/{{server_name}}

  - name: "Assign elastic ip"
    local_action: shell aws ec2 associate-address --region {{aws_region}} --instance-id {{ec2_id}} --allocation-id {{minecraft_eip_alloc_id}}
    ignore_errors: true
